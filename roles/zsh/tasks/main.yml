- name: Check if apt-cache is available
  shell: command -v apt-cache
  failed_when: no
  changed_when: no
  register: apt_cache

- name: Fail if apt_cache is not available
  fail:
    msg: "apt-cache is not available on current system, cannot install zsh"
  when: apt_cache.rc != 0

- name: Get available zsh version
  shell: apt-cache madison zsh | cut -d\| -f2 | sort | tail -1 | xargs
  register: zsh_versions
  changed_when: no

- name: Fail if zsh is too old
  fail:
    msg: "A minimum zsh 5.1 must be available for installation. Zsh version available on current system: {{ zsh_versions.stdout_lines[0] }}"
  when: zsh_versions.stdout_lines[0] < "5.1"

- name: Make sure zsh is installed
  package:
    name: zsh
    state: present
  become_method: sudo
  become: yes

- name: Check if .oh-my-zsh already exists
  stat: path="{{ ansible_env.HOME }}/.oh-my-zsh"
  register: oh_my_zsh_stat

- name: Install oh-my-zsh
  block:
  - name: Download oh-my-zsh install script
    get_url: 
      url: https://raw.githubusercontent.com/robbyrussell/oh-my-zsh/master/tools/install.sh
      mode: 0755
      dest: /tmp/

  - name: Execute oh-my-zsh install script
    shell: /tmp/install.sh

  always:
  - name: Delete oh-my-zsh install script
    file:
      dest: "/tmp/install.sh"
      state: absent
  when: oh_my_zsh_stat.stat.exists==false

- name: Configure theme in .zshrc
  replace:
    path: "{{ ansible_env.HOME }}/.zshrc"
    regexp: 'ZSH_THEME=.*$'
    replace: 'ZSH_THEME="powerlevel10k/powerlevel10k"'

- name: Configure plugins in .zshrc
  replace:
    path: "{{ ansible_env.HOME }}/.zshrc"
    regexp: 'plugins=.*$'
    replace: 'plugins=(git vagrant vagrant-prompt docker python pylint pip)'

- name: Configure .zshrc - disable warning for root
  blockinfile:
    path: "{{ ansible_env.HOME }}/.zshrc"
    insertbefore: BOF
    marker: "# {mark} FIRST ANSIBLE MANAGED BLOCK"
    block: |
      # Enable Powerlevel10k instant prompt. Should stay close to the top of ~/.zshrc.
      # Initialization code that may require console input (password prompts, [y/n]
      # confirmations, etc.) must go above this block; everything else may go below.
      if [[ -r "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh" ]]; then
        source "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh"
      fi
      
      ZSH_DISABLE_COMPFIX=true

- name: Configure .zshrc
  blockinfile:
    path: "{{ ansible_env.HOME }}/.zshrc"
    block: |
      # To customize prompt, run `p10k configure` or edit ~/.p10k.zsh.
      [[ -f ~/.p10k.zsh ]] && source ~/.p10k.zsh
      [[ -f ~/.zshrc_local ]] && source ~/.zshrc_local

- name: Create host-specific (local) zsh settings
  lineinfile:
    path: "{{ ansible_env.HOME }}/.zshrc_local"
    line: "DEFAULT_USER={{ ansible_env.USER }}"
    create: yes

- name: Check if zsh is available as a command
  shell: command -v zsh
  failed_when: no
  changed_when: no
  register: zsh

- name: Fail if zsh is not available
  fail:
    msg: "zsh is not found after installation, failure"
  when: zsh.rc != 0

- name: Make zsh default shell
  user:
    name: "{{ item }}"
    shell: "{{ zsh.stdout_lines[0] }}"
  become_method: sudo
  become: yes
  with_items:
    - "{{ ansible_env.USER }}"
    - "root"

- getent:
    database: passwd
    key: "root"
    split: ":"

- set_fact:
    root_home: "{{ getent_passwd['root'][4] }}"

- name: Link .zshrc for root user
  file:
    src: "{{ ansible_env.HOME }}/.zshrc"
    dest: "{{ root_home }}/.zshrc"
    state: link
  become_method: sudo
  become: yes

- name: Install powerlevel10k
  git:
    repo: https://github.com/romkatv/powerlevel10k.git
    dest: "{{ ansible_env.HOME }}/.oh-my-zsh/custom/themes/powerlevel10k"
    depth: 1

- name: Install powerlevel10k config
  file:
    src: "{{ role_path }}/files/.p10k.zsh"
    dest: "{{ ansible_env.HOME }}/.p10k.zsh"
    state: link

- name: Install powerlevel10k config for root
  file:
    src: "{{ role_path }}/files/.p10k.zsh"
    dest: "{{ root_home }}/.p10k.zsh"
    state: link
  become_method: sudo
  become: yes
